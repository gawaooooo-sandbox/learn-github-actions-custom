name: Setup Environment Variables
description: |
  This action is a crucial tool within your GitHub workflow to dynamically configure environment variables.
  By setting up these variables, it allows other actions and scripts within the workflow to operate under defined conditions,
  enhancing the flexibility and security of your deployment processes.

  The `environment-variables` input takes a space-separated string of key-value pairs which will be transformed into actual environment variables accessible in subsequent steps of the job.
  This is particularly useful for passing dynamic configurations and sensitive data securely between jobs or steps without hard-coding them into your YAML files.

  ## Usage Example

  ```yaml
  steps:
    - name: Setup Environment Variables
      uses: composite/setup-environment-variables@v0 # This is the version of the action
      with:
        environment-variables: >-
          TEST_URL="https://example.com"
          API_KEY="abcdef12345"
          SPACE_SEPARATED="one two three"
  ```

inputs:
  environment-variables:
    description: |
      Required input to dynamically set the environment variables for your workflow.
      Input these as a space-separated string of key-value pairs, where each pair is enclosed in quotes and keys are linked to their values by an equals sign.
      This format ensures that the variables can be parsed and set correctly within the workflow.
      For example, provide inputs like 'TEST="abc" URL="http://example.com" SERVICE="app"' to seamlessly integrate these variables into your build and deployment processes.
    required: true

runs:
  using: "composite"
  steps:
    - name: Validate and Set Environment Variables
      run: |
        set -x
        set -e

        # 入力値をシングルクォーテーションで囲むことで、文字列がそのまま保持されるようにする。
        # GitHub Actionsの式展開を避けて、入力された文字列がスクリプト内で正確に解析されるようにするため。
        env_vars='${{ inputs.environment-variables }}'
        echo "$env_vars"

        # 正規表現を使ってキーと値を抽出
        echo "$env_vars" | grep -oP '(?:\w+="[^"]+")' | while IFS='=' read -r key value; do
          # キーが環境変数として適切かチェック
          if [[ "$key" =~ ^[A-Za-z_][A-Za-z_0-9]*$ ]]; then
            # 値から引用符を削除
            value="${value%\"}"
            value="${value#\"}"
            echo "Setting: $key=$value"
            echo "$key=$value" >> "$GITHUB_ENV"
          else
            echo "Error: Invalid key format '$key'"
          fi
        done
      shell: bash
