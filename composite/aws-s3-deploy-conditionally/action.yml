name: AWS S3 Deploy Conditionally
description: |
  This action deploys files to an AWS S3 bucket conditionally.
  It uses the 'aws-actions/configure-aws-credentials' action to configure AWS credentials.

  In the 'aws-role-arn' input, provide the ARN of your AWS Role.
  Ensure to manage sensitive values such as ARN and keys securely, preferably using GitHub Secrets.

  To perform deployment, the action executes a sync command to the specified S3 bucket, controlled by the 'enable-aws-deploy' input parameter.

  ## Usage Example

  ```yml
  steps:
    - name: Deployt to S3
      uses: composite/aws-s3-deploy-conditionally@main
      with:
        aws-role-arn: <your-aws-role-arn> # Replace with your actual AWS Role ARN from GitHub Secrets
        environment: prod
        s3-sync-command: ./dist s3://my-bucket --delete
  ```

inputs:
  aws-region:
    description: |
      Specify the AWS region where your S3 bucket is located.
      This is necessary for the action to correctly interface with the correct regional endpoint of AWS S3.
      For example, use 'us-east-1' for the North Virginia region or 'eu-central-1' for the Frankfurt region.
      If not specified, the default region 'ap-northeast-1' (Tokyo) is used.
    required: false
    default: "ap-northeast-1"

  aws-role-arn:
    description: |
      Specify the ARN of your AWS Role for this action.
      It is recommended to manage the ARN value securely using GitHub Secrets.
      Reference the secret in your workflow like 'aws-role-arn: <your-secret-name>'.
    required: true

  environment:
    description: |
      "The environment to deploy to."
    required: true

  s3-sync-command:
    description: |
      Specify the command to be executed after 'aws s3 sync'.
      This command should include the local path of the files to be deployed and the target S3 bucket path, as well as any necessary flags.
      For example: ./dist s3://your-bucket-name/path --delete --exclude "tmp/*"
    required: true

  enable-aws-deploy:
    description: |
      "Whether to deploy to AWS S3."
    required: false
    default: "true"

outputs:
  s3-deploy-command:
    description: |
      "The command to sync files to the S3 bucket."
    value: ${{ steps.setup-s3-deploy-command.outputs.s3-deploy-command }}

runs:
  using: composite
  steps:
    - name: Setup S3 deploy command [${{ inputs.s3-sync-command }}]
      id: setup-s3-deploy-command
      run: |
        set -x
        s3_command='${{ inputs.s3-sync-command }}'
        echo "s3-deploy-command=aws s3 sync $s3_command" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Setup AWS Credentials
      if: ${{ fromJSON(inputs.enable-aws-deploy) }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}

    - name: Deploy to ${{ inputs.environment }} [aws s3 sync ${{ inputs.s3-sync-command }}]
      if: ${{ fromJSON(inputs.enable-aws-deploy) }}
      run: |
        set -x

        echo "Deploying to ${{ inputs.environment }} [aws s3 sync ${{ inputs.s3-sync-command}}]]"
        aws s3 sync ${{ inputs.s3-sync-command }}
      shell: bash
