name: AWS S3 Deploy Conditionally
description: |
  This action deploys files to an AWS S3 bucket conditionally.
  The action uses the `aws-actions/configure-aws-credentials` action to configure AWS credentials.

  ```yml
  steps:
    - name: Deployt to S3
      uses: composite/aws-s3-deploy-conditionally@main
      with:
        aws-role-arn: '${{ secrets.AWS_ROLE_ARN }}' # For the 'aws-role-arn', use the ARN of your AWS Role. You should use GitHub Secrets to manage sensitive values.
        environment: prod
        s3-sync-command: ./dist s3://my-bucket --delete
  ```

inputs:
  aws-region:
    description: |
      "The AWS region where the S3 bucket is located."
    required: false
    default: "ap-northeast-1"

  aws-role-arn:
    description: |
      Use the 'aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}' pattern with your actual AWS Role ARN.
    required: true

  environment:
    description: |
      "The environment to deploy to."
    required: true

  s3-sync-command:
    description: |
      "The command to sync files to the S3 bucket."
      e.g. "./dist s3://my-bucket --delete"
    required: true

  enable-aws-deploy:
    description: |
      "Whether to deploy to AWS S3."
    required: false
    default: "true"

outputs:
  s3-deploy-command:
    description: |
      "The command to sync files to the S3 bucket."
    value: ${{ steps.setup-s3-deploy-command.outputs.s3-deploy-command }}

runs:
  using: composite
  steps:
    - name: Setup S3 deploy command [${{ inputs.s3-sync-command }}]
      id: setup-s3-deploy-command
      run: |
        set -x
        s3_command='${{ inputs.s3-sync-command }}'
        echo "s3-deploy-command=aws s3 sync $s3_command" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Setup AWS Credentials
      if: ${{ fromJSON(inputs.enable-aws-deploy) }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}

    - name: Deploy to ${{ inputs.environment }} [aws s3 sync ${{ inputs.s3-sync-command }}]
      if: ${{ fromJSON(inputs.enable-aws-deploy) }}
      run: |
        set -x

        echo "Deploying to ${{ inputs.environment }} [aws s3 sync ${{ inputs.s3-sync-command}}]]"
        aws s3 sync ${{ inputs.s3-sync-command }}
      shell: bash
