name: Publishing Release Package
description: |
  このアクションは、プルリクエストに適用された特定のラベルに基づいてGitHub Packagesにパッケージを公開し、GitHubリリースを作成します。

  ラベルが 'release/' で始まる場合のみ、バージョンタグを生成し、パッケージを公開します。

  ## Usage

  ```yaml
  steps:
    - name: Publish release package
      uses: gawaooooo-sandbox/learn-github-actions-custom/composite/npm-release-publish@v0 # This is the version of the action
      with:
        pr-number: '1'
        github-token: 'YOUR_GITHUB_TOKEN'  # ここにGitHub Actionsが提供するデフォルトのトークンを指定
  ```

inputs:
  checkout-ref:
    description: |
      チェックアウトするリファレンス
    required: false
    default: ${{ github.ref }}
  node-version-file:
    description: |
      Node.jsのバージョンを指定するファイルのパス
    required: false
    default: ".nvmrc"
  npm-install-command:
    description: |
      npm install コマンド
    required: false
    default: "ci"
  pr-number:
    description: |
      プルリクエスト番号
    required: true
  github-token:
    description: |
      GitHubトークン
    required: true

runs:
  using: composite
  steps:
    - name: Inputs summary
      uses: gawaooooo-sandbox/learn-github-actions-custom/composite/inputs-summary@v3
      with:
        workflow-inputs: ${{ toJSON(inputs) }}

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.checkout-ref }}

    - name: Check PR labels
      id: labels
      run: |
        set -xeu

        json=$(gh pr view "$PR_NUMBER" --json labels | jq -c '.labels|map(.name)')
        echo "Fetched labels: $json"

        # Check if any label starts with 'release/'
        contains_release=$(echo "$json" | jq 'any(startswith("release/"))')
        echo "Contains 'release/' label: $contains_release"
        # Set output for later steps
        echo "contains_release=$contains_release" >> "$GITHUB_ENV"

        # If no 'release/' label found, exit job with success
        if [ "$contains_release" = "false" ]; then
          echo "No 'release/' label found, skipping job."
          exit 0 # Exiting with success status
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        PR_NUMBER: ${{ inputs.pr-number }}

    - name: Setup Node.js and Install dependencies
      if: env.contains_release == 'true'
      uses: gawaooooo-sandbox/learn-github-actions-custom/composite/node-setup-and-dependencies@v3
      with:
        skip-checkout: true
        node-version-file: ${{ inputs.node-version-file }}
        npm-install-command: ${{ inputs.npm-install-command }}
        npm-registry-url: https://npm.pkg.github.com
        npm-scope: "@${{ github.repository_owner }}"

    - name: Configure Git
      if: env.contains_release == 'true'
      uses: gawaooooo-sandbox/learn-github-actions-custom/composite/git-config@v3

    - name: Extract and Tag Version
      if: env.contains_release == 'true'
      id: tag_version
      run: |
        set -xeu

        # Fetch tags from the remote to make sure we have the latest tags information
        git fetch --tags

        # Extract the version number from package.json using jq
        version=$(jq -r '.version' package.json)
        echo "Extracted version: $version"

        # Check if the tag already exists
        if git rev-parse "v${version}" >/dev/null 2>&1; then
          echo "::error::Tag 'v${version}' already exists. Please update the version number or delete the existing tag."
          exit 1
        fi

        # Create a new Git tag with the extracted version number
        git tag "v${version}"

        # Push the new tag to the repository
        git push origin "v${version}"

        echo "tag=v${version}" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Publish to GitHub Packages
      if: env.contains_release == 'true'
      run: |
        set -xeu
        npm publish
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ inputs.github-token }}

    - name: Create GitHub Release
      if: env.contains_release == 'true'
      run: |
        set -xeu
        gh release create ${{ steps.tag_version.outputs.tag }} --title ${{ steps.tag_version.outputs.tag }} --generate-notes
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}

    - name: Append release success to job summary
      if: success() && env.contains_release == 'true' # Only append to the job summary if the job was successful and 'release/' label is present
      run: |
        {
          echo "## Release Details ✨"
          echo "Release for version ${{ steps.tag_version.outputs.tag }} was successfully created 🎉."
          echo "You can view the release [here](https://github.com/${{ github.repository }}/releases/tag/${{ steps.tag_version.outputs.tag }})."
        } >> "$GITHUB_STEP_SUMMARY"
      shell: bash
